#include <iostream>

using namespace std;
class stack{
    public:
    int size;
    int *arr;
    int top1;
    int top2;

    stack(int s){
        size=s;
        arr=new int[size];
        top1=-1;
        top2=size;
    }
    void push1(int d){
        if(top2-top1 > 1){
            top1++;
            arr[top1]=d;
        }
        else{
            cout<<"Stack_1 overflow"<<endl;
        }
    }
    void push2(int d){
        if(top2-top1 > 1){
            top2--;
            arr[top2]=d;
        }
        else{
            cout<<"Stack_2 overflow"<<endl;
        }
    }
    void pop1(){
        if(top1>-1){
            top1--;
        }
        else{
            cout<<"Stack_1 is Empty"<<endl;
        }
    }
    void pop2(){
        if(top2<size){
            top2++;
        }
        else{
            cout<<"Stack_2 is Empty"<<endl;
        }
    }
    void peek1(){
        if(top1>-1){
            cout<<"top element of stack_1 is "<<arr[top1]<<endl;
        }
        else{
            cout<<"Stack_1 is Empty"<<endl;
        }
    }
    void peek2(){
        if(top2<size){
            cout<<"top element of stack_2 is "<<arr[top2]<<endl;
        }
        else{
            cout<<"Stack_2 is Empty"<<endl;
        }
    }
    bool isempty1(){
        if(top1>=0){
            return false;
        }
        else{
            return true;
        }
    }
    bool isempty2(){
        if(top2<=size-1){
            return false;
        }
        else{
            return true;
        }
    }
    
};

int main()
{
    int s,d;
    cout<<"Enter the size of the array- ";cin>>s;
    stack s1(s);
    s1.push1(5);
    s1.push1(4);
    s1.peek1();
    s1.push1(6);
    cout<<s1.isempty2()<<endl;
    s1.peek1();
    return 0;
}
